-- Create the election_data table
create table if not exists public.election_data (
  id bigint generated by default as identity primary key,
  year integer not null,
  data jsonb not null,
  created_at timestamp with time zone default timezone('utc'::text, now()) not null,
  updated_at timestamp with time zone default timezone('utc'::text, now()) not null
);

-- Create the api_keys table
create table if not exists public.api_keys (
  id bigint generated by default as identity primary key,
  key text not null,
  created_at timestamp with time zone default timezone('utc'::text, now()) not null,
  updated_at timestamp with time zone default timezone('utc'::text, now()) not null
);

-- Create function to ensure tables exist
create or replace function public.create_election_tables()
returns void
language plpgsql
security definer
as $$
begin
  -- Create election_data table if it doesn't exist
  if not exists (select from pg_tables where schemaname = 'public' and tablename = 'election_data') then
    create table public.election_data (
      id bigint generated by default as identity primary key,
      year integer not null,
      data jsonb not null,
      created_at timestamp with time zone default timezone('utc'::text, now()) not null,
      updated_at timestamp with time zone default timezone('utc'::text, now()) not null
    );
  end if;

  -- Create api_keys table if it doesn't exist
  if not exists (select from pg_tables where schemaname = 'public' and tablename = 'api_keys') then
    create table public.api_keys (
      id bigint generated by default as identity primary key,
      key text not null,
      created_at timestamp with time zone default timezone('utc'::text, now()) not null,
      updated_at timestamp with time zone default timezone('utc'::text, now()) not null
    );
  end if;
end;
$$;